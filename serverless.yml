---
service: badger
frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-secrets-plugin
  - serverless-aws-documentation
  - serverless-export-swagger

custom:
  stage: ${opt:stage, self:provider.stage}
  secretsFilePathPrefix: secrets
  secrets: ${file(${self:custom.secretsFilePathPrefix}/secrets.${self:custom.stage}.yml)}
  documentation:
    api:
      info:
        version: "1.0"
        title: "Badger API"
        description: "Badger Finance Serverless API"
        tags:
          - name: "Protocol"
            description: "Protocol related API"
          - name: "Chart"
            description: "Chart related API"
  bucket:
    SWAGGER:
      staging: "badger-staging-docs"
      prod: "badger-docs"
  swaggerDestinations:
    s3BucketName: ${self:custom.bucket.SWAGGER.${self:custom.stage}}
    s3KeyName: "swagger/swagger.json"
    acl: public-read
  table:
    ASSET_DATA:
      staging: "badger-staging-asset"
      prod: "badger-asset"

provider:
  name: aws
  runtime: nodejs12.x
  stage: staging
  region: us-west-1
  apiGateway:
    shouldStartNameWithService: true
  environment:
    BADGER: "https://api.thegraph.com/subgraphs/name/axejintao/badger-dao"
    UNISWAP: "https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2"
    SUSHISWAP: "https://api.thegraph.com/subgraphs/name/croco-finance/sushiswap"
    ASSET_DATA: ${self:custom.table.ASSET_DATA.${self:custom.stage}}
    INFURA_PROJECT_ID: ${self:custom.secrets.INFURA_PROJECT_ID}
    INFURA_PROJECT_SECRET: ${self:custom.secrets.INFURA_PROJECT_SECRET}

functions:
  get-protocol-value:
    handler: service/protocol/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /protocol/value
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                tokens: false
          documentation:
            summary: "Retrieve value locked in all setts and protocol"
            description: "Sett values are pulled from indexed chain data with the total value included as the sum of all setts"
            queryParams:
              - name: "tokens"
                description: "Optionally include token balances"
                required: false
            tags:
              - "Protocol"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-protocol-earnings:
    handler: service/protocol/earnings/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /protocol/earnings/{userId}
          method: get
          cors: true
          documentation:
            summary: "Get earnings for a given ethereum address"
            description: "Get the token based earnings for all setts and their current USD valuation"
            pathParams:
              - name: "userId"
                description: "Ethereum address"
                required: true
            tags:
              - "Protocol"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-protocol-performance-summary:
    handler: service/protocol/performance/handler.summaryHandler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /protocol/performance
          method: get
          cors: true
          documentation:
            summary: "Estimated ROI per sett"
            description: "Return multiple ROI values for sampled periods"
            tags:
              - "Protocol"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-protocol-farm:
    handler: service/protocol/farm/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /protocol/farm
          method: get
          cors: true
          documentation:
            summary: "Get active Geyser farms"
            description: "Get the current active Geyser emission allocation"
            tags:
              - "Protocol"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-protocol-sett-performance:
    handler: service/protocol/performance/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /protocol/sett/{settName}/performance
          method: get
          cors: true
          documentation:
            summary: "Estimated ROI per sett"
            description: "Return multiple ROI values for sampled periods"
            pathParams:
              - name: "settName"
                description: "Sett name"
                required: true
            tags:
              - "Protocol"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-chart-sett-performance:
    handler: service/chart/sett/performance/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /chart/sett/{settName}/performance
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                count: false
          documentation:
            summary: "Chart data for historic sett performance"
            description: "Return an array of data point objects with coordinate values corresponding to sett ratio"
            pathParams:
              - name: "settName"
                description: "Sett name"
                required: true
            queryParams:
              - name: "count"
                description: "Number of data points to limit response"
                required: false
            tags:
              - "Chart"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  get-chart-sett:
    handler: service/chart/sett/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 30
    events:
      - http:
          path: /chart/sett/{settName}
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                count: false
          documentation:
            summary: "Chart data for historic sett assets under management"
            description: "Return an array of data point objects with coordinate values corresponding to sett asset USD valuation"
            pathParams:
              - name: "settName"
                description: "Sett name"
                required: true
            queryParams:
              - name: "count"
                description: "Number of data points to limit response"
                required: false
            tags:
              - "Chart"
            methodResponses:
              - statusCode: "200"
              - statusCode: "500"

  index-token:
    handler: service/index/curve/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 300
    events:
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-badger-sbtccrv
          description: "index historical data for badger sbtc sett"
          rate: rate(5 minutes)
          input:
            contract: "0xd04c48a53c111300ad41190d63681ed3dad998ec"
            createdBlock: 11380877
            asset: "sbtccrv"
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-badger-renbtccrv
          description: "index historical data for badger renbtccrv sett"
          rate: rate(5 minutes)
          input:
            contract: "0x6def55d2e18486b9ddfaa075bc4e4ee0b28c1545"
            createdBlock: 11380872
            asset: "renbtccrv"
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-badger-tbtccrv
          description: "index historical data for badger tbtccrv sett"
          rate: rate(5 minutes)
          input:
            contract: "0xb9d076fde463dbc9f915e5392f807315bf940334"
            createdBlock: 11380878
            asset: "tbtccrv"
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-badger-hrenbtccrv
          description: "index historical data for badger hrenbtccrv sett"
          rate: rate(5 minutes)
          input:
            contract: "0xaf5a1decfa95baf63e0084a35c62592b774a2a87"
            createdBlock: 11380939
            asset: "hrenbtccrv"
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-badger
          description: "index historical data for badger sett"
          rate: rate(5 minutes)
          input:
            contract: "0x19d97d8fa813ee2f51ad4b4e04ea08baf4dffc28"
            createdBlock: 11380871
            asset: "badger"

  index-uniswap:
    handler: service/index/uniswap/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 300
    events:
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-uniswap-badger-wbtc
          description: "index historical data for badger uniswap badger-wbtc sett"
          rate: rate(5 minutes)
          input:
            contract: "0x235c9e24d3fb2fafd58a2e49d454fdcd2dbf7ff1"
            createdBlock: 11380883
            asset: "badger-wbtc"

  index-sushiswap:
    handler: service/index/sushiswap/handler.handler
    role: arn:aws:iam::135612478587:role/badger-staging-us-west-1-lambdaRole
    timeout: 300
    events:
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-sushiswap-badger-wbtc
          description: "index historical data for badger sushiswap badger-wbtc jar"
          rate: rate(5 minutes)
          input:
            contract: "0x1862a18181346ebd9edaf800804f89190def24a5"
            createdBlock: 11537600
            asset: "slp-badger-wbtc"
      - schedule:
          name: ${self:service}-${self:custom.stage}-index-sushiswap-wbtc-eth
          description: "index historical data for badger sushiswap wbtc-eth jar"
          rate: rate(5 minutes)
          input:
            contract: "0x758a43ee2bff8230eeb784879cdcff4828f2544d"
            createdBlock: 11539529
            asset: "slp-wbtc-eth"