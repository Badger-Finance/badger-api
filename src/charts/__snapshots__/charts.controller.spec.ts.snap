// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChartsController GET /v2/charts with an unsupported address returns a 404 1`] = `
Object {
  "message": "0x4206942069420694206942069420694206942069 is not a valid sett",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with a large time range for DAY granularity returns a 422 1`] = `
Object {
  "message": "Too many data points to return. Increase the period or shorten the time range.",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with a large time range for HOUR granularity returns a 422 1`] = `
Object {
  "message": "Too many data points to return. Increase the period or shorten the time range.",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with a missing id returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "id must be an Ethereum address",
      "field": "id",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with an invalid address returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "id must be an Ethereum address",
      "field": "id",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with an invalid chain returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "chain must be a valid enum value",
      "field": "chain",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with an invalid granularity returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "granularity must be a valid enum value",
      "field": "granularity",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with an invalid period returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "period must be a positive number",
      "field": "period",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with an invalid time range returns a 422 1`] = `
Object {
  "message": "\\"start\\" must be strictly less than \\"end\\"",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with end but no start returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "start must be a valid ISO 8601 date string",
      "field": "start",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts with invalid args with start but no end returns a 422 1`] = `
Object {
  "errors": Array [
    Object {
      "code": "end must be a valid ISO 8601 date string",
      "field": "end",
    },
  ],
  "message": "Validation failed",
}
`;

exports[`ChartsController GET /v2/charts/vault get vault data with different timeframes should return vault data for 1Y 1`] = `
Array [
  Object {
    "address": "0xBE08Ef12e4a553666291E9fFC24fCCFd354F2Dd2",
    "apr": 0,
    "available": 0,
    "balance": 0.1610241919976674,
    "block": 15122792,
    "boostWeight": 0,
    "harvestApr": 0,
    "id": "0xBE08Ef12e4a553666291E9fFC24fCCFd354F2Dd2_ethereum",
    "pricePerFullShare": 1.0846088659170035,
    "strategy": Object {
      "address": "0x05eC4356e1acd89CC2d16adC7415c8c95E736AC1",
      "aumFee": 0,
      "performanceFee": 1000,
      "strategistFee": 0,
      "withdrawFee": 0,
    },
    "strategyBalance": 0.1610241919976674,
    "timestamp": 1657562103195,
    "totalSupply": 0.14846291327475586,
    "value": 133.03,
    "yieldApr": 0,
  },
]
`;

exports[`ChartsController GET /v2/charts/vault get vault data with different timeframes should return vault data for YTD 1`] = `
Array [
  Object {
    "address": "0xBE08Ef12e4a553666291E9fFC24fCCFd354F2Dd2",
    "apr": 0,
    "available": 0,
    "balance": 0.1610241919976674,
    "block": 15122792,
    "boostWeight": 0,
    "harvestApr": 0,
    "id": "0xBE08Ef12e4a553666291E9fFC24fCCFd354F2Dd2_ethereum",
    "pricePerFullShare": 1.0846088659170035,
    "strategy": Object {
      "address": "0x05eC4356e1acd89CC2d16adC7415c8c95E736AC1",
      "aumFee": 0,
      "performanceFee": 1000,
      "strategistFee": 0,
      "withdrawFee": 0,
    },
    "strategyBalance": 0.1610241919976674,
    "timestamp": 1657562103195,
    "totalSupply": 0.14846291327475586,
    "value": 133.03,
    "yieldApr": 0,
  },
]
`;

exports[`ChartsController GET /v2/charts/vault with a missing vault address returns 400, QueryParamError 1`] = `
Object {
  "code": 1000,
  "message": "Query param address invalid",
}
`;
