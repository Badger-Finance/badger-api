import { Currency, Token, TokenValue, VaultDTO } from '@badger-dao/sdk';
import { Chain } from '../chains/config/chain.config';
import { TokenFull, TokenFullMap } from './interfaces/token-full.interface';
export declare function toBalance(token: Token, balance: number, currency?: Currency): Promise<TokenValue>;
export declare function getVaultTokens(chain: Chain, vault: VaultDTO, currency?: Currency): Promise<TokenValue[]>;
export declare function getFullToken(chain: Chain, tokenAddr: Token['address']): Promise<TokenFull>;
export declare function getFullTokens(chain: Chain, tokensAddr: Token['address'][]): Promise<TokenFullMap>;
export declare function getCachedTokesInfo(tokensAddr: Token['address'][]): Promise<Token[]>;
export declare function cacheTokensInfo(tokens: Token[]): Promise<void>;
export declare function mergeTokensFullData(chainTokens: Chain['tokens'], tokens: Token[]): TokenFullMap;
export declare function lookUpAddrByTokenName(chain: Chain, name: string): Token['address'] | undefined;
export declare function mockBalance(token: Token, balance: number, currency?: Currency): TokenValue;
